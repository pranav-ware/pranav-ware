#!/bin/bash

# Assume CST = UTCâˆ’6 (no DST)
# Get yesterday's CST date by subtracting 6 hours from UTC time
yesterday_cst=$(date -u -d "yesterday 06:00" +"%Y-%m-%d")
file1="u_ex$(date -d "$yesterday_cst" +%y%m%d)"
file2="u_ex$(date -d "$yesterday_cst +1 day" +%y%m%d)"

# Define UTC time range that maps to 00:00 to 23:59 CST
start_utc=$(date -u -d "$yesterday_cst 00:00:00 CST" +"%Y-%m-%d %H:%M:%S")
end_utc=$(date -u -d "$yesterday_cst 23:59:59 CST" +"%Y-%m-%d %H:%M:%S")

# Print CSV header
echo "Timestamp,Method,URL,Status"

# Filter and convert logs to CSV
cat "$file1" "$file2" 2>/dev/null | \
grep -Ei 'ooo|sent' | \
awk -v start="$start_utc" -v end="$end_utc" '
function utc_to_epoch(date_str) {
  cmd = "date -d \"" date_str "\" +%s";
  cmd | getline epoch;
  close(cmd);
  return epoch;
}

function convert_to_cst(utc_date, utc_time,   cst_date) {
  cmd = "date -u -d \"" utc_date " " utc_time " UTC -6 hours\" \"+%Y-%m-%d %H:%M:%S\"";
  cmd | getline cst_date;
  close(cmd);
  return cst_date;
}

{
  timestamp = $1 " " $2;
  t_epoch = utc_to_epoch(timestamp);
  s_epoch = utc_to_epoch(start);
  e_epoch = utc_to_epoch(end);

  if (t_epoch >= s_epoch && t_epoch <= e_epoch) {
    cst_ts = convert_to_cst($1, $2);
    method = $3;
    url = $4;
    status = $6;
    print "\"" cst_ts "\",\"" method "\",\"" url "\",\"" status "\"";
  }
}'
